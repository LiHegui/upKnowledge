import{_ as s,e as t,f as a,o as n}from"./app-BeRZjn83.js";const i={};function l(o,e){return n(),t("div",null,e[0]||(e[0]=[a(`<h2 id="前端模块的现状" tabindex="-1"><a class="header-anchor" href="#前端模块的现状"><span>前端模块的现状</span></a></h2><h3 id="es-module" tabindex="-1"><a class="header-anchor" href="#es-module"><span>ES Module</span></a></h3><p>ES Module 是 2015 年颁布的 ES2015（原名 ES6）标准所覆盖的特性之一，设计目标是整合 CommonJS、AMD 等已有模块方案，提供一个标准的、更高效的做法。ES Module 与现有方案的区别主要在以下方面：</p><ul><li>声明式而非命令式，或者说 import 是声明语句 Declaration 而非表达式 Statement CommonJS中的require就是Statement<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">    <span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>ES Module中的 import是声明语句</li><li>import 和 export 的值也和 CommonJS 这种以 exports Object 为载体的方式不同</li><li>默认运行环境为 module ，相当于 script 模式的普通脚本 &#39;use strict&#39; 开启严格模式</li></ul>`,4)]))}const p=s(i,[["render",l],["__file","history.html.vue"]]),c=JSON.parse('{"path":"/repository/%E6%A8%A1%E5%9D%97%E5%8C%96/history.html","title":"","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"前端模块的现状","slug":"前端模块的现状","link":"#前端模块的现状","children":[{"level":3,"title":"ES Module","slug":"es-module","link":"#es-module","children":[]}]}],"git":{"updatedTime":1738722167000,"contributors":[{"name":"LiHegui","username":"LiHegui","email":"1487647822@qq.com","commits":1,"url":"https://github.com/LiHegui"}]},"filePathRelative":"repository/模块化/history.md"}');export{p as comp,c as data};
