import{_ as t,e as a,f as r,o as i}from"./app-BeRZjn83.js";const l={};function o(n,e){return i(),a("div",null,e[0]||(e[0]=[r('<h1 id="react知识库" tabindex="-1"><a class="header-anchor" href="#react知识库"><span>React知识库</span></a></h1><h2 id="redux工作流程" tabindex="-1"><a class="header-anchor" href="#redux工作流程"><span>redux工作流程</span></a></h2><p>Redux时JavaScriptz状态容器</p><ul><li>store 单一数据源</li><li>action 是对变化的描述 通知reducer，让state发生改变，返回新的state</li><li>reducer 负责对变化进行分发和处理 是将新的state返回store</li></ul><p>在Redux的整个工作过程中，数据流是严格单向的</p><h2 id="react-hooks" tabindex="-1"><a class="header-anchor" href="#react-hooks"><span>React Hooks</span></a></h2><ul><li><p>类组件</p></li><li><p>函数组件 函数组件会捕捉render内部的状态</p></li></ul><p>Hooks</p><ul><li>useState 为函数组件引入状态</li><li>useEffect 允许函数组件执行副作用操作 在一定程度上充当生命周期的缺席 useEffect能够为函数组件引入副作用 componentDidMount、componentDidUpdate、ComponentWillUnmount 都可以放在这里做</li><li></li></ul><h2 id="推荐文章" tabindex="-1"><a class="header-anchor" href="#推荐文章"><span>推荐文章</span></a></h2><p><a href="https://juejin.cn/post/6844904191228411911" target="_blank" rel="noopener noreferrer">学习 redux 源码整体架构，深入理解 redux 及其中间件原理</a></p>',11)]))}const c=t(l,[["render",o],["__file","index.html.vue"]]),d=JSON.parse('{"path":"/tools/repository/redux%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/","title":"React知识库","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"redux工作流程","slug":"redux工作流程","link":"#redux工作流程","children":[]},{"level":2,"title":"React Hooks","slug":"react-hooks","link":"#react-hooks","children":[]},{"level":2,"title":"推荐文章","slug":"推荐文章","link":"#推荐文章","children":[]}],"git":{"updatedTime":1738722167000,"contributors":[{"name":"LiHegui","username":"LiHegui","email":"1487647822@qq.com","commits":1,"url":"https://github.com/LiHegui"}]},"filePathRelative":"tools/repository/redux源码解析/index.md"}');export{c as comp,d as data};
