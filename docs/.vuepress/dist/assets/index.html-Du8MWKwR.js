import{_ as e,c as i,a as t,o as s}from"./app-DPjPDnzl.js";const n={};function r(l,a){return s(),i("div",null,a[0]||(a[0]=[t(`<h2 id="什么是async-await" tabindex="-1"><a class="header-anchor" href="#什么是async-await"><span>什么是async await?</span></a></h2><h2 id="一次性发送多个请求-保证他们的顺序" tabindex="-1"><a class="header-anchor" href="#一次性发送多个请求-保证他们的顺序"><span>一次性发送多个请求，保证他们的顺序？</span></a></h2><h2 id="处理是个并发请求" tabindex="-1"><a class="header-anchor" href="#处理是个并发请求"><span>处理是个并发请求？</span></a></h2><h2 id="如果是await一个非promise会发生什么" tabindex="-1"><a class="header-anchor" href="#如果是await一个非promise会发生什么"><span>如果是await一个非promise会发生什么</span></a></h2><pre><code>JavaScript 将会抛出一个 TypeError 异常。这是因为 await 只能用于等待一个 Promise 对象的结果。
</code></pre>`,5)]))}const o=e(n,[["render",r],["__file","index.html.vue"]]),d=JSON.parse('{"path":"/tools/docs/interview/ES6/async%E5%92%8Cawait/","title":"","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"什么是async await?","slug":"什么是async-await","link":"#什么是async-await","children":[]},{"level":2,"title":"一次性发送多个请求，保证他们的顺序？","slug":"一次性发送多个请求-保证他们的顺序","link":"#一次性发送多个请求-保证他们的顺序","children":[]},{"level":2,"title":"处理是个并发请求？","slug":"处理是个并发请求","link":"#处理是个并发请求","children":[]},{"level":2,"title":"如果是await一个非promise会发生什么","slug":"如果是await一个非promise会发生什么","link":"#如果是await一个非promise会发生什么","children":[]}],"git":{"updatedTime":1738722167000,"contributors":[{"name":"LiHegui","username":"LiHegui","email":"1487647822@qq.com","commits":1,"url":"https://github.com/LiHegui"}]},"filePathRelative":"tools/docs/interview/ES6/async和await/index.md"}');export{o as comp,d as data};
