import{_ as s,c as a,a as t,o as e}from"./app-DPjPDnzl.js";const p={};function o(l,n){return e(),a("div",null,n[0]||(n[0]=[t(`<h2 id="_200-字节让你永远不再考虑-react-状态管理库" tabindex="-1"><a class="header-anchor" href="#_200-字节让你永远不再考虑-react-状态管理库"><span>200 字节让你永远不再考虑 React 状态管理库</span></a></h2><h2 id="源码解析" tabindex="-1"><a class="header-anchor" href="#源码解析"><span>源码解析</span></a></h2><p>这个包的源码很短，我们可以来看一下</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">ContainerProviderProps<span class="token operator">&lt;</span>State <span class="token operator">=</span> <span class="token keyword">void</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span></span>
<span class="line">	initialState<span class="token operator">?</span><span class="token operator">:</span> State</span>
<span class="line">	children<span class="token operator">:</span> React<span class="token punctuation">.</span>ReactNode</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">Container<span class="token operator">&lt;</span>Value<span class="token punctuation">,</span> State <span class="token operator">=</span> <span class="token keyword">void</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span></span>
<span class="line">	Provider<span class="token operator">:</span> React<span class="token punctuation">.</span>ComponentType<span class="token operator">&lt;</span>ContainerProviderProps<span class="token operator">&lt;</span>State<span class="token operator">&gt;&gt;</span></span>
<span class="line">	<span class="token function-variable function">useContainer</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Value</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">createContainer</span><span class="token generic class-name"><span class="token operator">&lt;</span>Value<span class="token punctuation">,</span> State <span class="token operator">=</span> <span class="token keyword">void</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span></span>
<span class="line">	<span class="token function-variable function">useHook</span><span class="token operator">:</span> <span class="token punctuation">(</span>initialState<span class="token operator">?</span><span class="token operator">:</span> State<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Value<span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token operator">:</span> Container<span class="token operator">&lt;</span>Value<span class="token punctuation">,</span> State<span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">let</span> Context <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">createContext</span><span class="token generic class-name"><span class="token operator">&lt;</span>Value <span class="token operator">|</span> <span class="token keyword">null</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">	<span class="token keyword">function</span> <span class="token function">Provider</span><span class="token punctuation">(</span>props<span class="token operator">:</span> ContainerProviderProps<span class="token operator">&lt;</span>State<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token keyword">let</span> value <span class="token operator">=</span> <span class="token function">useHook</span><span class="token punctuation">(</span>props<span class="token punctuation">.</span>initialState<span class="token punctuation">)</span></span>
<span class="line">		<span class="token keyword">return</span> <span class="token operator">&lt;</span>Context<span class="token punctuation">.</span>Provider value<span class="token operator">=</span><span class="token punctuation">{</span>value<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>children<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>Context<span class="token punctuation">.</span>Provider<span class="token operator">&gt;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">	<span class="token keyword">function</span> <span class="token function">useContainer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Value <span class="token punctuation">{</span></span>
<span class="line">		<span class="token keyword">let</span> value <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useContext</span><span class="token punctuation">(</span>Context<span class="token punctuation">)</span></span>
<span class="line">		<span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">			<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Component must be wrapped with &lt;Container.Provider&gt;&quot;</span><span class="token punctuation">)</span></span>
<span class="line">		<span class="token punctuation">}</span></span>
<span class="line">		<span class="token keyword">return</span> value</span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">	<span class="token keyword">return</span> <span class="token punctuation">{</span> Provider<span class="token punctuation">,</span> useContainer <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">useContainer</span><span class="token generic class-name"><span class="token operator">&lt;</span>Value<span class="token punctuation">,</span> State <span class="token operator">=</span> <span class="token keyword">void</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span></span>
<span class="line">	container<span class="token operator">:</span> Container<span class="token operator">&lt;</span>Value<span class="token punctuation">,</span> State<span class="token operator">&gt;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token operator">:</span> Value <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">return</span> container<span class="token punctuation">.</span><span class="token function">useContainer</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4)]))}const i=s(p,[["render",o],["__file","unstated-next.html.vue"]]),r=JSON.parse('{"path":"/tools/repository/React/%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86/unstated-next.html","title":"","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"200 字节让你永远不再考虑 React 状态管理库","slug":"_200-字节让你永远不再考虑-react-状态管理库","link":"#_200-字节让你永远不再考虑-react-状态管理库","children":[]},{"level":2,"title":"源码解析","slug":"源码解析","link":"#源码解析","children":[]}],"git":{"updatedTime":1738722167000,"contributors":[{"name":"LiHegui","username":"LiHegui","email":"1487647822@qq.com","commits":1,"url":"https://github.com/LiHegui"}]},"filePathRelative":"tools/repository/React/状态管理/unstated-next.md"}');export{i as comp,r as data};
